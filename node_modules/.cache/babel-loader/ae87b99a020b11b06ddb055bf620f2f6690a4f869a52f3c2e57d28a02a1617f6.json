{"ast":null,"code":"import { SORT_RATING } from \"../action\";\nconst initialState = {\n  games: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"GET_GAMES\":\n      return {\n        ...state,\n        games: action.payload\n      };\n    case SORT_RATING:\n      let sortRating = action.payload === 'Lowest to Highest Rating' ? state.games.sort((a, b) => {\n        if (a.rating > b.rating) {\n          return 1;\n        }\n        if (a.rating < b.rating) {\n          return -1;\n        }\n        return 0;\n      }) : state.games.sort((a, b) => {\n        if (a.rating > b.rating) {\n          return -1;\n        }\n        if (a.rating < b.rating) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        games: sortRating\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["SORT_RATING","initialState","games","rootReducer","state","action","type","payload","sortRating","sort","a","b","rating"],"sources":["C:/Users/julia/OneDrive/Escritorio/piultimo/PI-Videogames-main/client/src/reducer/index.js"],"sourcesContent":["import{SORT_RATING} from\"../action\"\n\n\nconst initialState = {\n    games :[]\n}\n\nfunction rootReducer (state = initialState,action) {\n     switch (action.type){\n        case \"GET_GAMES\":\n            return{\n                ...state,\n                games:action.payload\n            }\n             case SORT_RATING:\n                let sortRating = action.payload === 'Lowest to Highest Rating' ?\n                state.games.sort((a,b) => {\n                    if(a.rating > b.rating){\n                        return 1;\n                    }\n                    if(a.rating < b.rating){\n                        return -1;\n                    }\n                    return 0;\n                }) : \n                state.games.sort((a,b) => {\n                    if(a.rating > b.rating){\n                        return -1;\n                    }\n                    if(a.rating < b.rating){\n                        return 1;\n                    }\n                    return 0;\n                })\n                return {\n                    ...state,\n                    games: sortRating\n                }\n\n\n            default:\n                return state;\n     }\n\n    \n}\n\nexport default rootReducer"],"mappings":"AAAA,SAAOA,WAAW,QAAM,WAAW;AAGnC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,SAASC,WAAW,GAA+B;EAAA,IAA7BC,KAAK,uEAAGH,YAAY;EAAA,IAACI,MAAM;EAC5C,QAAQA,MAAM,CAACC,IAAI;IAChB,KAAK,WAAW;MACZ,OAAM;QACF,GAAGF,KAAK;QACRF,KAAK,EAACG,MAAM,CAACE;MACjB,CAAC;IACA,KAAKP,WAAW;MACb,IAAIQ,UAAU,GAAGH,MAAM,CAACE,OAAO,KAAK,0BAA0B,GAC9DH,KAAK,CAACF,KAAK,CAACO,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;QACtB,IAAGD,CAAC,CAACE,MAAM,GAAGD,CAAC,CAACC,MAAM,EAAC;UACnB,OAAO,CAAC;QACZ;QACA,IAAGF,CAAC,CAACE,MAAM,GAAGD,CAAC,CAACC,MAAM,EAAC;UACnB,OAAO,CAAC,CAAC;QACb;QACA,OAAO,CAAC;MACZ,CAAC,CAAC,GACFR,KAAK,CAACF,KAAK,CAACO,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;QACtB,IAAGD,CAAC,CAACE,MAAM,GAAGD,CAAC,CAACC,MAAM,EAAC;UACnB,OAAO,CAAC,CAAC;QACb;QACA,IAAGF,CAAC,CAACE,MAAM,GAAGD,CAAC,CAACC,MAAM,EAAC;UACnB,OAAO,CAAC;QACZ;QACA,OAAO,CAAC;MACZ,CAAC,CAAC;MACF,OAAO;QACH,GAAGR,KAAK;QACRF,KAAK,EAAEM;MACX,CAAC;IAGL;MACI,OAAOJ,KAAK;EAAC;AAI7B;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}