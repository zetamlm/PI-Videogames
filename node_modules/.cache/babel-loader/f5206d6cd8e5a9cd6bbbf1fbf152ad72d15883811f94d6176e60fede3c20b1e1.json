{"ast":null,"code":"import { SORT_RATING, SORT_ALPHABETICALLY, FILTER_GAMES_GENRE, ORDER_CREATED } from \"../actions/index\";\nconst initialState = {\n  games: [],\n  allGames: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"GET_GAMES\":\n      return {\n        ...state,\n        games: action.payload,\n        allGames: action.payload\n      };\n    case SORT_RATING:\n      let sortRating = action.payload === 'Lowest to Highest Rating' ? state.games.sort((a, b) => {\n        if (a.rating > b.rating) {\n          return 1;\n        }\n        if (a.rating < b.rating) {\n          return -1;\n        }\n        return 0;\n      }) : state.games.sort((a, b) => {\n        if (a.rating > b.rating) {\n          return -1;\n        }\n        if (a.rating < b.rating) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        games: sortRating\n      };\n    case SORT_ALPHABETICALLY:\n      let sort = action.payload === 'A - Z' ? state.games.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n      }) : state.games.sort((a, b) => {\n        if (a.name > b.name) {\n          return -1;\n        }\n        if (a.name < b.name) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        games: sort\n      };\n    case FILTER_GAMES_GENRE:\n      const allGames = state.allGames;\n      const gamesApi = allGames.filter(el => el.genres.includes(action.payload));\n      const gamesDb = allGames.filter(el => {\n        for (let i = 0; i < el.genres.length; i++) {\n          if (el.genres[i].name === action.payload) {\n            return el;\n          }\n        }\n      });\n      const allFiltered = gamesApi.concat(gamesDb);\n      return {\n        ...state,\n        games: allFiltered\n      };\n    case ORDER_CREATED:\n      var aux;\n      if (action.payload === \"db\") {\n        aux = state.allGames.filter(ge => ge.createdAtDb);\n        if (!aux.length) aux = {\n          dbError: 'No games found'\n        };\n      } else {\n        aux = state.allGames.filter(ge => !ge.createdAtDb);\n      }\n      return {\n        ...state,\n        games: aux\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["SORT_RATING","SORT_ALPHABETICALLY","FILTER_GAMES_GENRE","ORDER_CREATED","initialState","games","allGames","rootReducer","state","action","type","payload","sortRating","sort","a","b","rating","name","gamesApi","filter","el","genres","includes","gamesDb","i","length","allFiltered","concat","aux","ge","createdAtDb","dbError"],"sources":["C:/Users/julia/OneDrive/Escritorio/piultimo/PI-Videogames-main/client/src/reducer/index.js"],"sourcesContent":["import{SORT_RATING,\n    SORT_ALPHABETICALLY,\n    FILTER_GAMES_GENRE,\n    ORDER_CREATED,} from\"../actions/index\"\n\n\nconst initialState = {\n    games :[],\n    allGames:[]\n}\n\nfunction rootReducer (state = initialState,action) {\n     switch (action.type){\n        case \"GET_GAMES\":\n            return{\n                ...state,\n                games:action.payload,\n                allGames:action.payload\n            }\n             case SORT_RATING:\n                let sortRating = action.payload === 'Lowest to Highest Rating' ?\n                state.games.sort((a,b) => {\n                    if(a.rating > b.rating){\n                        return 1;\n                    }\n                    if(a.rating < b.rating){\n                        return -1;\n                    }\n                    return 0;\n                }) : \n                state.games.sort((a,b) => {\n                    if(a.rating > b.rating){\n                        return -1;\n                    }\n                    if(a.rating < b.rating){\n                        return 1;\n                    }\n                    return 0;\n                })\n                return {\n                      ...state,\n                     games: sortRating\n                         }\n\n\n            case SORT_ALPHABETICALLY:\n                    let sort = action.payload === 'A - Z' ?\n                    state.games.sort((a,b) => {\n                    if(a.name > b.name){\n                    return 1;\n                    }\n                     if(a.name < b.name){\n                    return -1;\n                    }\n                    return 0;\n                    }) :  state.games.sort((a,b) => {\n                    if(a.name > b.name){\n                    return -1;\n                    }\n                    if(a.name < b.name){\n                    return 1;\n                    }\n                    return 0;\n                    })\n                    return {\n                       ...state,\n                       games: sort\n                             }\n  \n\n            case FILTER_GAMES_GENRE:\n                    const allGames = state.allGames\n                    const gamesApi = allGames.filter(el => el.genres.includes(action.payload))\n                    const gamesDb = allGames.filter((el) => {\n                    for(let i = 0; i < el.genres.length; i++){\n                    if(el.genres[i].name === action.payload){\n                        return el\n                       }\n                    }\n                     })\n                    const allFiltered = gamesApi.concat(gamesDb)\n                        return{\n                        ...state,\n                        games: allFiltered\n                               }\n\n\n            case ORDER_CREATED:\n                    var aux;\n                    if(action.payload === \"db\"){\n                    aux = state.allGames.filter(ge => ge.createdAtDb)\n                    if(!aux.length) aux= {dbError: 'No games found'}\n                    } else {\n                      aux = state.allGames.filter(ge=> !ge.createdAtDb)\n                     }\n                      return {\n                          ...state,\n                          games: aux\n                            }  \n            \n\n\n\n            default:\n                return state;\n     }\n\n    \n}\n\nexport default rootReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}